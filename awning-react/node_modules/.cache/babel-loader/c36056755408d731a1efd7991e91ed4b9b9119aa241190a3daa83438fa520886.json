{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Chart from'chart.js/auto';import'../styles/GraphStyles.css';import{jsx as _jsx}from\"react/jsx-runtime\";const WindGraph=()=>{const[windData,setWindData]=useState([]);const chartRef=useRef(null);useEffect(()=>{const fetchData=()=>{const dummyData=Array.from({length:10},()=>Math.floor(Math.random()*50));setWindData(dummyData);};fetchData();},[]);useEffect(()=>{if(chartRef.current){chartRef.current.destroy();// Destroy the previous chart instance\n}const ctx=document.getElementById('wind-chart');const newChart=new Chart(ctx,{type:'line',data:{labels:Array.from({length:windData.length},(_,i)=>\"Sample \".concat(i+1)),datasets:[{label:'Wind Speed',data:windData,fill:false,borderColor:'rgb(75, 192, 192)',tension:0.1}]},options:{scales:{x:{title:{display:true,text:'Samples'}},y:{title:{display:true,text:'Wind Speed (m/s)'},suggestedMin:0,// Set the minimum value for the Y-axis\nsuggestedMax:Math.max(...windData)+10,// Set the maximum value for the Y-axis\n// Adjust the step size for better scaling\nticks:{stepSize:5}}},plugins:{title:{display:true,text:'Real-time Wind Detection Graph',font:{size:18}},tooltip:{enabled:true,callbacks:{label:context=>\"Wind Speed: \".concat(context.raw,\" m/s\")}}}}});chartRef.current=newChart;return()=>{if(chartRef.current){chartRef.current.destroy();// Ensure that the chart is destroyed when the component unmounts\n}};},[windData]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"canvas\",{id:\"wind-chart\"})});};export default WindGraph;","map":{"version":3,"names":["React","useState","useEffect","useRef","Chart","jsx","_jsx","WindGraph","windData","setWindData","chartRef","fetchData","dummyData","Array","from","length","Math","floor","random","current","destroy","ctx","document","getElementById","newChart","type","data","labels","_","i","concat","datasets","label","fill","borderColor","tension","options","scales","x","title","display","text","y","suggestedMin","suggestedMax","max","ticks","stepSize","plugins","font","size","tooltip","enabled","callbacks","context","raw","children","id"],"sources":["C:/Users/ninad/iot-awning-2/awning-react/src/components/WindGraph.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport '../styles/GraphStyles.css'\r\n\r\nconst WindGraph = () => {\r\n    const [windData, setWindData] = useState([]);\r\n    const chartRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            const dummyData = Array.from({ length: 10 }, () => Math.floor(Math.random() * 50));\r\n            setWindData(dummyData);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (chartRef.current) {\r\n            chartRef.current.destroy(); // Destroy the previous chart instance\r\n        }\r\n\r\n        const ctx = document.getElementById('wind-chart');\r\n        const newChart = new Chart(ctx, {\r\n            type: 'line',\r\n            data: {\r\n                labels: Array.from({ length: windData.length }, (_, i) => `Sample ${i + 1}`),\r\n                datasets: [{\r\n                    label: 'Wind Speed',\r\n                    data: windData,\r\n                    fill: false,\r\n                    borderColor: 'rgb(75, 192, 192)',\r\n                    tension: 0.1,\r\n                }]\r\n            },\r\n            options: {\r\n                scales: {\r\n                    x: {\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Samples'\r\n                        }\r\n                    },\r\n                    y: {\r\n                        title: {\r\n                            display: true,\r\n                            text: 'Wind Speed (m/s)'\r\n                        },\r\n                        suggestedMin: 0, // Set the minimum value for the Y-axis\r\n                        suggestedMax: Math.max(...windData) + 10, // Set the maximum value for the Y-axis\r\n                        // Adjust the step size for better scaling\r\n                        ticks: {\r\n                            stepSize: 5\r\n                        }\r\n                    }\r\n                },\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Real-time Wind Detection Graph',\r\n                        font: {\r\n                            size: 18\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        callbacks: {\r\n                            label: (context) => `Wind Speed: ${context.raw} m/s`\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        chartRef.current = newChart;\r\n\r\n        return () => {\r\n            if (chartRef.current) {\r\n                chartRef.current.destroy(); // Ensure that the chart is destroyed when the component unmounts\r\n            }\r\n        };\r\n    }, [windData]);\r\n\r\n    return (\r\n        <div>\r\n            <canvas id=\"wind-chart\"></canvas>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WindGraph;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,2BAA2B,QAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAAAS,QAAQ,CAAGP,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,SAAS,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,SAAS,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAE,EAAG,CAAC,CAAE,IAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,EAAE,CAAC,CAAC,CAClFT,WAAW,CAACG,SAAS,CAAC,CAC1B,CAAC,CAEDD,SAAS,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAENT,SAAS,CAAC,IAAM,CACZ,GAAIQ,QAAQ,CAACS,OAAO,CAAE,CAClBT,QAAQ,CAACS,OAAO,CAACC,OAAO,CAAC,CAAC,CAAE;AAChC,CAEA,KAAM,CAAAC,GAAG,CAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CACjD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAApB,KAAK,CAACiB,GAAG,CAAE,CAC5BI,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,CACFC,MAAM,CAAEd,KAAK,CAACC,IAAI,CAAC,CAAEC,MAAM,CAAEP,QAAQ,CAACO,MAAO,CAAC,CAAE,CAACa,CAAC,CAAEC,CAAC,aAAAC,MAAA,CAAeD,CAAC,CAAG,CAAC,CAAE,CAAC,CAC5EE,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,YAAY,CACnBN,IAAI,CAAElB,QAAQ,CACdyB,IAAI,CAAE,KAAK,CACXC,WAAW,CAAE,mBAAmB,CAChCC,OAAO,CAAE,GACb,CAAC,CACL,CAAC,CACDC,OAAO,CAAE,CACLC,MAAM,CAAE,CACJC,CAAC,CAAE,CACCC,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,SACV,CACJ,CAAC,CACDC,CAAC,CAAE,CACCH,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,kBACV,CAAC,CACDE,YAAY,CAAE,CAAC,CAAE;AACjBC,YAAY,CAAE5B,IAAI,CAAC6B,GAAG,CAAC,GAAGrC,QAAQ,CAAC,CAAG,EAAE,CAAE;AAC1C;AACAsC,KAAK,CAAE,CACHC,QAAQ,CAAE,CACd,CACJ,CACJ,CAAC,CACDC,OAAO,CAAE,CACLT,KAAK,CAAE,CACHC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,gCAAgC,CACtCQ,IAAI,CAAE,CACFC,IAAI,CAAE,EACV,CACJ,CAAC,CACDC,OAAO,CAAE,CACLC,OAAO,CAAE,IAAI,CACbC,SAAS,CAAE,CACPrB,KAAK,CAAGsB,OAAO,iBAAAxB,MAAA,CAAoBwB,OAAO,CAACC,GAAG,QAClD,CACJ,CACJ,CACJ,CACJ,CAAC,CAAC,CAEF7C,QAAQ,CAACS,OAAO,CAAGK,QAAQ,CAE3B,MAAO,IAAM,CACT,GAAId,QAAQ,CAACS,OAAO,CAAE,CAClBT,QAAQ,CAACS,OAAO,CAACC,OAAO,CAAC,CAAC,CAAE;AAChC,CACJ,CAAC,CACL,CAAC,CAAE,CAACZ,QAAQ,CAAC,CAAC,CAEd,mBACIF,IAAA,QAAAkD,QAAA,cACIlD,IAAA,WAAQmD,EAAE,CAAC,YAAY,CAAS,CAAC,CAChC,CAAC,CAEd,CAAC,CAED,cAAe,CAAAlD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}