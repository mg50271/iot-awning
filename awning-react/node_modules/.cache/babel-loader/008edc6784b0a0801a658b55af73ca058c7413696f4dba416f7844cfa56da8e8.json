{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ninad\\\\iot-awning-2\\\\awning-react\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { Form, Button } from 'react-bootstrap';\nimport { useTable } from \"react-table\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  dataa\n}) => {\n  _s();\n  const columns = useMemo(() => [{\n    Header: \"ID\",\n    accessor: \"id\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Location\",\n    accessor: \"location\"\n  }, {\n    Header: \"Folded\",\n    accessor: \"is_folded\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    dataa\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(Table, \"hVtfAjBNoEmF4F2HvZ0pQ7DQFgw=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useMemo","Container","Row","Col","getAuth","onAuthStateChanged","Form","Button","useTable","axios","jsxDEV","_jsxDEV","Table","dataa","_s","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/ninad/iot-awning-2/awning-react/src/components/Table.js"],"sourcesContent":["import React, {useState, useMemo} from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { Form, Button} from 'react-bootstrap';\r\nimport { useTable } from \"react-table\";\r\nimport axios from 'axios';\r\n\r\nconst Table = ({ dataa }) => {\r\n    \r\n    \r\n    \r\n\r\n    const columns = useMemo(\r\n      () => [\r\n        { Header: \"ID\", accessor: \"id\" },\r\n        { Header: \"Name\", accessor: \"name\" },\r\n        { Header: \"Location\", accessor: \"location\" },\r\n        { Header: \"Folded\", accessor: \"is_folded\" },\r\n      ],\r\n      []\r\n    ); \r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n      } = useTable({ columns, dataa }); \r\n\r\n      return(\r\n      <div className=\"table-container\">\r\n                        <table {...getTableProps()}>\r\n                        <thead>\r\n                        {headerGroups.map((headerGroup) => (\r\n                       <tr {...headerGroup.getHeaderGroupProps()}>\r\n                          {headerGroup.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n              {rows.map((row) => {\r\n                     prepareRow(row);\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                        {row.cells.map((cell) => (\r\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n      );\r\n    } \r\n\r\n\r\n    export default Table;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}